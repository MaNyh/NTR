/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  v1912                                 |
|   \\  /    A nd           | Website:  www.openfoam.com                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

fastMerge   true;   // Use fast topological search

//const scalar pi(M_PI);

//Pi #calc "constant::mathematical::pi";

scale   1;

L   #calc "8*constant::mathematical::pi"; // Lx --> Streamwise domain size in UTexas
//L   #calc "8*3.14156";
H   1.0; // Channel half width as delta in UTexas
H2  #calc "2*$H"; // Channel width 
W   #calc "3*constant::mathematical::pi"; // Lz --> Spanwise domain size in UTexas
//W   #calc "3*3.14156";

//------------------------- Parameterization for the Number of Cells ----------------------------------------------
xmin 0;
//xmax 1;
ymin 0;
//ymax 1;
zmin 0;
//zmax 1;

deltax 0.10;	//0.05 - 0.01
deltay 0.08;	//0.05 - 0.01 // not needed due to simpleGrading in y-direction
deltaz 0.10;	//0.05 - 0.01

lx 	#calc "$L - $xmin";	//abs($xmax - $xmin)"
ly 	#calc "$H2 - $ymin";
lz 	#calc "$W - $zmin";

xcells 	#calc "round(($lx)/($deltax))";
// ycells 	#calc "round(($ly)/($deltay))"; // not needed due to simpleGrading in y-direction
zcells 	#calc "round(($lz)/($deltaz))";

//-----------------------------------------------------------------------

vertices
(
    ( 0   0   0)
    ($L   0   0)
    ($L  $H   0)
    ($L $H2   0)
    ( 0 $H2   0)
    ( 0  $H   0)

    ( 0   0  $W)
    ($L   0  $W)
    ($L  $H  $W)
    ($L $H2  $W)
    ( 0 $H2  $W)
    ( 0  $H  $W)
);

// Grading Calculator: https://openfoamwiki.net/index.php/Scripts/blockMesh_grading_calculation
/*
blocks
(
    hex ( 0  1  2  5  6  7  8 11) (500 23 246) simpleGrading (1 25 1) //org was (500 23 82)
    hex ( 5  2  3  4 11  8  9 10) (500 23 246) simpleGrading (1 0.04 1)
);

*/
blocks
(
    hex ( 0  1  2  5  6  7  8 11) ($xcells 12 $zcells) simpleGrading (1 25 1) //org was (500 23 82)
    hex ( 5  2  3  4 11  8  9 10) ($xcells 12 $zcells) simpleGrading (1 0.04 1)
    //hex ( 0  1  2  5  6  7  8 11) ($xcells 46 $zcells) simpleGrading (1 10 1) //Aspect ratio --> 9
    //hex ( 5  2  3  4 11  8  9 10) ($xcells 46 $zcells) simpleGrading (1 0.1 1)
);

edges
(
);

boundary
(
    bottomWall
    {
        type            wall;
        faces           ((0 6 7 1));
    }
    topWall
    {
        type            wall;
        faces           ((4 3 9 10));
    }

    sides_half0
    {
        type            cyclic;
        neighbourPatch  sides_half1;
        faces           ((1 2 5 0)(2 3 4 5));
    }
    sides_half1
    {
        type            cyclic;
        neighbourPatch  sides_half0;
        faces           ((6 11 8 7)(11 10 9 8));
    }

    INLETper
    {
        type            patch; //org was patch
        faces           ((0 5 11 6)(5 4 10 11));
    }
    OUTLETper
    {
        type            patch; //org was patch
        faces           ((1 7 8 2)(2 8 9 3));
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
